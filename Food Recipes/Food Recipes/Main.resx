<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1XX/hls7GPsPaWz30IRebmwAAAAASUVORK5CYII=
</value>
  </data>
</root>